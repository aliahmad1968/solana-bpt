import requests

TELEGRAM_BOT_TOKEN = '7622219142:AAFDK9pu_03jT8Ec3I10Y1OSmMeS1M3qd48'
TELEGRAM_CHAT_ID = '2094695016'

def send_telegram_alert(message):
    url = f'https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage'
    data = {'chat_id': TELEGRAM_CHAT_ID, 'text': message}
    requests.post(url, data=data)

def fetch_tokens_from_pumpfun():
    print("Ø¬Ø§Ø±ÙŠ Ø¬Ù„Ø¨ Ø§Ù„ØªÙˆÙƒÙ†Ø§Øª Ù…Ù† pump.fun...")
    response = requests.get("https://client-api.pump.fun/v1/tokens/recent")
    if response.status_code == 200:
        return response.json()
    return []

def fetch_token_data_from_dexscreener(token_address):
    print(f"Ø¬Ù„Ø¨ Ø¨ÙŠØ§Ù†Ø§Øª DexScreener Ù„Ù„ØªÙˆÙƒÙ†: {token_address}")
    url = f"https://api.dexscreener.com/latest/dex/pairs/solana/{token_address}"
    response = requests.get(url)
    if response.status_code == 200:
        return response.json().get("pair", {})
    return {}

def analyze_and_alert_once():
    tokens = fetch_tokens_from_pumpfun()
    print(f"Ø¹Ø¯Ø¯ Ø§Ù„ØªÙˆÙƒÙ†Ø§Øª Ø§Ù„Ø¬Ø¯ÙŠØ¯Ø©: {len(tokens)}")
    for token in tokens[:3]:
        token_address = token.get("id")
        token_name = token.get("name", "N/A")
        dex_data = fetch_token_data_from_dexscreener(token_address)
        if dex_data:
            price = dex_data.get("priceUsd", "N/A")
            liquidity = dex_data.get("liquidity", {}).get("usd", "N/A")
            market_cap = dex_data.get("fdv", "N/A")
            holders = dex_data.get("holders", "N/A")
            message = f"ðŸš€ ØªÙˆÙƒÙ† Ø¬Ø¯ÙŠØ¯ Ø¹Ù„Ù‰ Ø³ÙˆÙ„Ø§Ù†Ø§ ðŸš€\\n" \
                      f"Ø§Ù„Ø§Ø³Ù…: {token_name}\\n" \
                      f"Ø§Ù„Ø¹Ù†ÙˆØ§Ù†: {token_address}\\n" \
                      f"Ø§Ù„Ø³Ø¹Ø±: {price}$\\n" \
                      f"Ø§Ù„Ø³ÙŠÙˆÙ„Ø©: {liquidity}$\\n" \
                      f"Ù…Ø§Ø±ÙƒØª ÙƒØ§Ø¨: {market_cap}$\\n" \
                      f"Ø¹Ø¯Ø¯ Ø§Ù„Ø­Ø§Ø¦Ø²ÙŠÙ†: {holders}"
            print(f"Ø¥Ø±Ø³Ø§Ù„ ØªÙ†Ø¨ÙŠÙ‡ Ù„Ù„ØªÙˆÙƒÙ†: {token_name}")
            send_telegram_alert(message)

analyze_and_alert_once()
